{"ast":null,"code":"'use strict';\n\nimport Appearance from './Appearance';\nimport { useSyncExternalStore } from 'react';\nconst subscribe = onStoreChange => {\n  const appearanceSubscription = Appearance.addChangeListener(onStoreChange);\n  return () => appearanceSubscription.remove();\n};\nexport default function useColorScheme() {\n  return useSyncExternalStore(subscribe, Appearance.getColorScheme);\n}","map":{"version":3,"names":["Appearance","useSyncExternalStore","subscribe","onStoreChange","appearanceSubscription","addChangeListener","remove","useColorScheme","getColorScheme"],"sources":["C:/dev_serratec/ReactNative/ReactNativeSerratec/individual-p1/node_modules/react-native/Libraries/Utilities/useColorScheme.js"],"sourcesContent":["/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n * @flow strict-local\n */\n\n'use strict';\n\nimport type {ColorSchemeName} from './NativeAppearance';\n\nimport Appearance from './Appearance';\nimport {useSyncExternalStore} from 'react';\n\nconst subscribe = (onStoreChange: () => void) => {\n  const appearanceSubscription = Appearance.addChangeListener(onStoreChange);\n  return () => appearanceSubscription.remove();\n};\n\nexport default function useColorScheme(): ?ColorSchemeName {\n  return useSyncExternalStore(subscribe, Appearance.getColorScheme);\n}\n"],"mappings":"AAUA,YAAY;;AAIZ,OAAOA,UAAU,MAAM,cAAc;AACrC,SAAQC,oBAAoB,QAAO,OAAO;AAE1C,MAAMC,SAAS,GAAIC,aAAyB,IAAK;EAC/C,MAAMC,sBAAsB,GAAGJ,UAAU,CAACK,iBAAiB,CAACF,aAAa,CAAC;EAC1E,OAAO,MAAMC,sBAAsB,CAACE,MAAM,CAAC,CAAC;AAC9C,CAAC;AAED,eAAe,SAASC,cAAcA,CAAA,EAAqB;EACzD,OAAON,oBAAoB,CAACC,SAAS,EAAEF,UAAU,CAACQ,cAAc,CAAC;AACnE","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}